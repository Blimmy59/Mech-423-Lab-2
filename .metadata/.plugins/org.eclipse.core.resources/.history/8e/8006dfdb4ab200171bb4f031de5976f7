#include "msp430x22x4.h"

/**
 * main.c
 */
void main(void)
{
    volatile unsigned int w;
  // Stop watchdog timer
  WDTCTL = WDTPW + WDTHOLD;

  // Clock Configuration
  BCSCTL1 = XT2OFF + XTS;               // XT2 off, XT1 high freq
  BCSCTL2 = SELM0 + SELM1 + SELS;       // XT1 -> MCLK, XT1 -> SMCLK
  BCSCTL3 = LFXT1S1;                    // XT1 freq 3-16 MHz

  // I/O Setup
  P1DIR = BIT7;                         //port 1.7 pins as output
  P3SEL = BIT4 | BIT5;                  // Set up ports 3.4 and 3.5 as UART ports

  // UART Registers
//  UCA0CTL1 = UCSSEL1;                   // Use SMCLK for UART
//  UCA0BR0 = 1666 & 0xFF;                // Set baud rate
//  UCA0BR1 = 1666 >> 8;
//  UCA0MCTL = UCBRS_6;                   // Set modulation bits
      UCA0CTL1 = UCSSEL1;          // Use SMCLK for UART (Page 430)
      UCA0BR0 = 104;       // Set baud rate (Table 15-4 on page 425)
      UCA0BR1 = 0b00000000;
      UCA0MCTL = UCBRF0 + UCBRF1 + UCOS16;          // Set modulation bits (Page 431) Set UCOS16 for Oversampling table on page 425




  IE2 |= UCA0RXIE;                      // Enable Rx interrupt

  _EINT();                              // Global interrupt enable

  while (1)
  {
      UCA0TXBUF = 0b1100001;             // output a

      w = 2000;                //Delay
      do w--;
      while (w != 0);
  }
}

#pragma vector=USCIAB0RX_VECTOR         // defined in "msp430x22x4.h"
__interrupt void UART_RX(void)          // interrupt on incoming data
{
  volatile unsigned int i;              //volatile to prevent optimization
  unsigned char rx_byte;
  rx_byte = UCA0RXBUF;                  // grab byte from RX buffer

  //if its a j
  if(rx_byte == 0b1101010)
      P1OUT = BIT7;                     //turn on LED3

  //if its a k
  if(rx_byte == 0b1101011)
      P1OUT = 0b00000000;                     //turn off LED3



  while((IFG2 & UCA0TXIFG) == 0);       // wait for TX buffer to be clear
  {
      UCA0TXBUF = rx_byte;                  // Echo the byte back
      //Delay

      i = 2500;

      do i--;
      while (i != 0);
      //output next character in ASCII table
      UCA0TXBUF = (rx_byte+1);                 // send that byte

  }
}
